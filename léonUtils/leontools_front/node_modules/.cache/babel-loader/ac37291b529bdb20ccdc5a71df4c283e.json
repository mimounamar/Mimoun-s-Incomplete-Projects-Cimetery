{"ast":null,"code":"var _jsxFileName = \"/Users/mimoun/WebstormProjects/leontools-frontend/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport homeIcon from '../assets/images/icon_home.png';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport jwtDecode from \"jwt-decode\";\nimport { ErrorWrapper, LoginContainer, LoginPicture, LoginTitle, LoginWrapper, LoginPictureContainer } from \"../styled/Login.styled\";\nimport getUserFromDb from \"../api/getUserFromDb\";\nimport registerUser from \"../api/registerUser\";\nimport getUserIp from \"../helpers/getUserIp\";\nimport createSession from \"../api/createSession\";\nimport randomText from \"../helpers/randomText\";\nimport { useNavigate } from \"react-router-dom\";\nimport getSessionFromDb from \"../api/getSessionFromDb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  let navigate = useNavigate();\n\n  function redirectUser() {\n    const sessionId = sessionStorage.getItem('sessionId');\n\n    if (sessionId) {\n      getSessionFromDb(sessionId).then(response => {\n        getUserFromDb(response.data.google_id).then(userResponse => {\n          userResponse.data.verified ? navigate(\"/dashboard\", {\n            replace: true\n          }) : navigate(\"/CGU\", {\n            replace: true\n          });\n        });\n      });\n    }\n  }\n\n  redirectUser();\n  const [errorString, setErrorString] = useState(\"\");\n\n  function verifyUserValidity(response) {\n    const userObject = jwtDecode(response.credential);\n    const userMail = userObject.email;\n    const userDomain = userMail.split(\"@\")[1];\n\n    if (userDomain !== (\"leonafricain.ma\" || \"elbilia.ma\")) {\n      setErrorString(\"Veuillez utiliser votre adresse mail professionnelle\");\n      document.getElementById(\"error-wrapper\").style.display = \"block\";\n    } else {\n      setErrorString(\"\");\n      document.getElementById(\"error-wrapper\").style.display = \"none\";\n      handleLogin(userMail);\n    }\n  }\n\n  function handleLogin(googleId) {\n    getUserFromDb(googleId).then(response => {\n      getUserIp().then(ipResponse => {\n        const userIp = ipResponse.data.ipAddress;\n        const sessionId = randomText(10);\n        createSession(googleId, userIp, sessionId).then(response => {\n          sessionStorage.setItem(\"sessionId\", sessionId);\n          navigate(\"/CGU\", {\n            replace: true\n          });\n        });\n      });\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        registerUser(googleId).then(response => {\n          getUserIp().then(ipResponse => {\n            const userIp = ipResponse.data.ipAddress;\n            const sessionId = randomText(10);\n            createSession(googleId, userIp, sessionId).then(response => {\n              sessionStorage.setItem(\"sessionId\", sessionId);\n              navigate(\"/CGU\", {\n                replace: true\n              });\n            });\n          });\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    /*global google*/\n    google.accounts.id.initialize({\n      client_id: \"518591411336-6r7hes5r15e658cieinangeh7f39ctsb.apps.googleusercontent.com\",\n      callback: verifyUserValidity\n    });\n    google.accounts.id.renderButton(document.getElementById(\"signInDiv\"), {\n      theme: \"outline\",\n      size: \"large\",\n      shape: \"pill\"\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(LoginWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(LoginPictureContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoginPicture, {\n        src: homeIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LoginTitle, {\n        children: \"Connectez vous en utilisant Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorWrapper, {\n        id: \"error-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-exclamation-triangle\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), errorString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"signInDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"oc3TUIsN7OUgnQKxzg1FfPFL+RU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","homeIcon","jwtDecode","ErrorWrapper","LoginContainer","LoginPicture","LoginTitle","LoginWrapper","LoginPictureContainer","getUserFromDb","registerUser","getUserIp","createSession","randomText","useNavigate","getSessionFromDb","Login","navigate","redirectUser","sessionId","sessionStorage","getItem","then","response","data","google_id","userResponse","verified","replace","errorString","setErrorString","verifyUserValidity","userObject","credential","userMail","email","userDomain","split","document","getElementById","style","display","handleLogin","googleId","ipResponse","userIp","ipAddress","setItem","catch","error","status","google","accounts","id","initialize","client_id","callback","renderButton","theme","size","shape"],"sources":["/Users/mimoun/WebstormProjects/leontools-frontend/src/pages/Login.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport homeIcon from '../assets/images/icon_home.png'\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport jwtDecode from \"jwt-decode\";\nimport {\n    ErrorWrapper,\n    LoginContainer,\n    LoginPicture,\n    LoginTitle,\n    LoginWrapper,\n    LoginPictureContainer\n} from \"../styled/Login.styled\";\nimport getUserFromDb from \"../api/getUserFromDb\";\nimport registerUser from \"../api/registerUser\";\nimport getUserIp from \"../helpers/getUserIp\";\nimport createSession from \"../api/createSession\";\nimport randomText from \"../helpers/randomText\";\nimport {useNavigate} from \"react-router-dom\";\nimport getSessionFromDb from \"../api/getSessionFromDb\";\n\nfunction Login() {\n\n    let navigate = useNavigate()\n\n    function redirectUser(){\n        const sessionId = sessionStorage.getItem('sessionId')\n        if(sessionId){\n            getSessionFromDb(sessionId).then(response => {\n                getUserFromDb(response.data.google_id).then(userResponse => {\n                    userResponse.data.verified ? navigate(\"/dashboard\", { replace: true }) : navigate(\"/CGU\", { replace: true })\n                })\n            })\n        }\n    }\n    redirectUser()\n\n    const [errorString, setErrorString] = useState(\"\")\n\n    function verifyUserValidity(response){\n        const userObject = jwtDecode(response.credential);\n        const userMail = userObject.email;\n        const userDomain = userMail.split(\"@\")[1];\n        if (userDomain !== (\"leonafricain.ma\" || \"elbilia.ma\")){\n            setErrorString(\"Veuillez utiliser votre adresse mail professionnelle\");\n            document.getElementById(\"error-wrapper\").style.display = \"block\";\n        }\n        else{\n            setErrorString(\"\");\n            document.getElementById(\"error-wrapper\").style.display = \"none\";\n            handleLogin(userMail)\n        }\n    }\n\n    function handleLogin(googleId){\n        getUserFromDb(googleId)\n            .then((response) => {\n                getUserIp().then(ipResponse => {\n                    const userIp = ipResponse.data.ipAddress\n                    const sessionId = randomText(10)\n                    createSession(googleId, userIp, sessionId).then(response => {\n                        sessionStorage.setItem(\"sessionId\", sessionId)\n                        navigate(\"/CGU\", { replace: true })\n                    })\n                })\n        }).catch(error => {\n            if (error.response && error.response.status === 404) {\n                registerUser(googleId)\n                    .then(response => {\n                        getUserIp().then(ipResponse => {\n                            const userIp = ipResponse.data.ipAddress\n                            const sessionId = randomText(10)\n                            createSession(googleId, userIp, sessionId).then(response => {\n                                sessionStorage.setItem(\"sessionId\", sessionId)\n                                navigate(\"/CGU\", { replace: true })\n                            })\n                        })\n                    })\n            }\n        })\n\n    }\n\n    useEffect(() => {\n        /*global google*/\n        google.accounts.id.initialize({\n            client_id: \"518591411336-6r7hes5r15e658cieinangeh7f39ctsb.apps.googleusercontent.com\",\n            callback: verifyUserValidity\n        });\n        google.accounts.id.renderButton(\n            document.getElementById(\"signInDiv\"),\n            {theme:\"outline\", size:\"large\", shape:\"pill\"}\n        );\n    });\n\n\n    return (\n        <LoginWrapper>\n            <LoginPictureContainer>\n                <LoginPicture src={homeIcon}></LoginPicture>\n            </LoginPictureContainer>\n\n            <LoginContainer>\n                <LoginTitle>Connectez vous en utilisant Google</LoginTitle>\n                <ErrorWrapper id=\"error-wrapper\">\n                    <i className=\"bi bi-exclamation-triangle\"> </i>\n                    {errorString}\n                </ErrorWrapper>\n                <div id=\"signInDiv\"></div>\n            </LoginContainer>\n        </LoginWrapper>\n    );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}